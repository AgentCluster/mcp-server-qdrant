# Default values for mcp-server-qdrant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: 
  - name: dockerhub-secret
nameOverride: ""
fullnameOverride: ""

env: 
  QDRANT_URL: "http://qdrant.qdrant.svc.cluster.local:6333"
  QDRANT_API_KEY: ""
  COLLECTION_NAME: "emsal_uyap"
  EMBEDDING_MODEL: "text-embedding-004"
  EMBEDDING_PROVIDER: "gemini-transformer"
  GEMINI_API_KEY: ""
  REQUESTS_CA_BUNDLE: "/etc/ssl/certs/ca-certificates.crt"
  CURL_CA_BUNDLE: "/etc/ssl/certs/ca-certificates.crt"
  PYTHONUNBUFFERED: "1"
  PYTHONIOENCODING: "utf-8"
  QDRANT_SEARCH_LIMIT: "10"
  QDRANT_READ_ONLY: "true"
  QDRANT_TIMEOUT: "60"
  QDRANT_OUTPUT_FORMAT: "json"
  LOG_LEVEL: "INFO"
  LOG_DIR: "/app/logs"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations: {
     kubernetes.io/ingress.class: nginx,
     kubernetes.io/tls-acme: "true"
  }
  hosts:
    - host: qdrant.mcp.avukat.cloud
      paths:
        - path: /
          pathType: ImplementationSpecific
          port: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
